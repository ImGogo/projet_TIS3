/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package princetonPlainsboro.ui;
import java.awt.BorderLayout;
import princetonPlainsboro.ui.AddPatient;
import javax.swing.JList;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import princetonPlainsboro.fc.Acte;
import princetonPlainsboro.fc.Code;
import princetonPlainsboro.fc.Date;
import princetonPlainsboro.fc.DossierMedical;
import princetonPlainsboro.fc.DossierMedicalPrinter;
import princetonPlainsboro.fc.FicheDeSoins;
import princetonPlainsboro.fc.FichePatientPrinter;
import princetonPlainsboro.fc.LectureXMLDossier;
import princetonPlainsboro.fc.LectureXMLMedecin;
import princetonPlainsboro.fc.LectureXMLPatient;
import princetonPlainsboro.fc.Medecin;
import princetonPlainsboro.fc.ModifyXMLFile;
import princetonPlainsboro.fc.Patient;
import princetonPlainsboro.fc.TypeActe;

/**
 *
 * @author Go.0
 */
public class MainWindow extends javax.swing.JFrame {
    
    private DossierMedical dm;
    private List<Patient> listePatients;
    private List<Medecin> listeMedecins;
    private AddPatient addPatientWindow = null;

    /** Creates new form NewJFrame */
    public MainWindow() {
        this.setTitle("Prinston-Plainsboro    Gestion des dossiers médicaux");
        this.getContentPane().setBackground( new java.awt.Color(255,255,255) );
        UIManager.put("TabbedPane.selected", new java.awt.Color(0,145,194));
        initComponents();
        LectureXMLMedecin lxm = new LectureXMLMedecin("Medecin.xml");
        LectureXMLPatient lxp = new LectureXMLPatient("Patient.xml");
        LectureXMLDossier lxd = new LectureXMLDossier("Fiches.xml");
        
        listePatients = lxp.getPatients();
        listeMedecins = lxm.getMedecins();
        
        this.dm = lxd.getDossier(listePatients, listeMedecins);
        
        initPatientTab();
        initMedecinTab();
        initFichesTab();
        initPrixTab();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel2 = new javax.swing.JLabel();
        jMenu1 = new javax.swing.JMenu();
        jDialog1 = new javax.swing.JDialog();
        jPanel9 = new javax.swing.JPanel();
        typeBtnGrp = new javax.swing.ButtonGroup();
        mainTabbedPanel = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jSplitPane3 = new javax.swing.JSplitPane();
        jPanel14 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        fichesLst = new javax.swing.JList<>();
        addFicheBtn = new javax.swing.JButton();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jButton12 = new javax.swing.JButton();
        editFicheBtn = new javax.swing.JButton();
        saveFicheBtn = new javax.swing.JButton();
        addActeBtn = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        ficheObservationsTxtf = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        fichesActesCBox = new javax.swing.JComboBox<>();
        typeDiagnostiqueBtn = new javax.swing.JRadioButton();
        typeTherapeutique = new javax.swing.JRadioButton();
        ficheDayBox = new javax.swing.JComboBox<>();
        ficheMonthBox = new javax.swing.JComboBox<>();
        ficheYearBox = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        ficheCoutTotalLbl = new javax.swing.JLabel();
        fichePatientsBox = new javax.swing.JComboBox<>();
        ficheMedecinsBox = new javax.swing.JComboBox<>();
        ficheCoutActeLbl = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ficheMinuteBox = new javax.swing.JComboBox<>();
        ficheHourBox = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        medecinPnl = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        medecinLst = new javax.swing.JList<>();
        addMedecinBtn = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jComboBox5 = new javax.swing.JComboBox<>();
        jPanel11 = new javax.swing.JPanel();
        saveMedecinBtn = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        medecinNameTxtF = new javax.swing.JTextField();
        medecinSpecialiteTxtF = new javax.swing.JTextField();
        medecinTelephoneTxtF = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        medecinSurnameTxtF = new javax.swing.JTextField();
        editMedecinBtn = new javax.swing.JToggleButton();
        patientPnl = new javax.swing.JPanel();
        patientSPnl = new javax.swing.JSplitPane();
        patientListPnl = new javax.swing.JPanel();
        patientListScroll = new javax.swing.JScrollPane();
        patientLst = new javax.swing.JList<>();
        addPatientBtn = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        jComboBox6 = new javax.swing.JComboBox<>();
        viewPatientPnl = new javax.swing.JPanel();
        printPatientBtn = new javax.swing.JButton();
        savePatientBtn = new javax.swing.JButton();
        accessFichesPatientBtn = new javax.swing.JButton();
        infoPatientPnl = new javax.swing.JPanel();
        nameLbl = new javax.swing.JLabel();
        surnameLbl = new javax.swing.JLabel();
        adressLbl = new javax.swing.JLabel();
        patientNameTxtF = new javax.swing.JTextField();
        patientSurnameTxtF = new javax.swing.JTextField();
        patientAdressTxtF = new javax.swing.JTextField();
        patientInseeLbl = new javax.swing.JLabel();
        patientInseeTxtF = new javax.swing.JTextField();
        listeActePatientLbl = new javax.swing.JLabel();
        listeActePatientSPnl = new javax.swing.JScrollPane();
        listeActepatientTbl = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        patientCoutTotalLbl = new javax.swing.JLabel();
        editPatientBtn = new javax.swing.JToggleButton();
        jPanel8 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        prixActeBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        prixCoefTxtF = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        prixActeLbl = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        jLabel2.setText("jLabel2");

        jMenu1.setText("jMenu1");

        org.jdesktop.layout.GroupLayout jDialog1Layout = new org.jdesktop.layout.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 300, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout jPanel9Layout = new org.jdesktop.layout.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 255));
        setResizable(false);

        mainTabbedPanel.setBackground(new java.awt.Color(50, 109, 168));
        mainTabbedPanel.setForeground(new java.awt.Color(255, 255, 255));
        mainTabbedPanel.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        mainTabbedPanel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mainTabbedPanelStateChanged(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jSplitPane3.setBackground(new java.awt.Color(255, 0, 0));
        jSplitPane3.setBorder(null);
        jSplitPane3.setDividerLocation(300);
        jSplitPane3.setDividerSize(8);

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setBorder(null);
        jPanel14.setForeground(java.awt.Color.darkGray);
        jPanel14.setEnabled(false);

        fichesLst.setBackground(new java.awt.Color(255, 255, 255));
        fichesLst.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        fichesLst.setForeground(java.awt.Color.darkGray);
        fichesLst.setModel(new javax.swing.AbstractListModel<FicheDeSoins>() {
            FicheDeSoins[] strings = {  };
            public int getSize() { return strings.length; }
            public FicheDeSoins getElementAt(int i) { return strings[i]; }
        });
        fichesLst.setSelectionBackground(new java.awt.Color(0, 145, 194));
        fichesLst.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane4.setViewportView(fichesLst);

        addFicheBtn.setBackground(new java.awt.Color(50, 109, 168));
        addFicheBtn.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        addFicheBtn.setForeground(new java.awt.Color(255, 255, 255));
        addFicheBtn.setText("Ajouter");
        addFicheBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addFicheBtnActionPerformed(evt);
            }
        });

        jComboBox3.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox3.setForeground(java.awt.Color.darkGray);
        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Date ^", "Date v", "Coût ^", "Coût v" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel12.setForeground(java.awt.Color.darkGray);
        jLabel12.setText("Trier par :");

        jComboBox4.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox4.setForeground(java.awt.Color.darkGray);
        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aucun", "Patient", "Médecin", "Date" }));
        jComboBox4.setSelectedItem(null);
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jLabel13.setForeground(java.awt.Color.darkGray);
        jLabel13.setText("Filtrer par :");

        jButton1.setBackground(new java.awt.Color(50, 109, 168));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Imprimer le dossier médical");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel14Layout = new org.jdesktop.layout.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel14Layout.createSequentialGroup()
                .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE))
                    .add(jPanel14Layout.createSequentialGroup()
                        .add(47, 47, 47)
                        .add(jButton1)
                        .add(0, 58, Short.MAX_VALUE))
                    .add(jPanel14Layout.createSequentialGroup()
                        .add(25, 25, 25)
                        .add(addFicheBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 93, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel14Layout.createSequentialGroup()
                                .add(jLabel13)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jComboBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel14Layout.createSequentialGroup()
                                .add(jLabel12)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jComboBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel14Layout.createSequentialGroup()
                .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel14Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jComboBox4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel13))
                        .add(20, 20, 20)
                        .add(jPanel14Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jComboBox3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel12)))
                    .add(jPanel14Layout.createSequentialGroup()
                        .add(15, 15, 15)
                        .add(addFicheBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 45, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(18, 18, 18)
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 440, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jButton1)
                .addContainerGap())
        );

        jSplitPane3.setLeftComponent(jPanel14);

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));

        jButton12.setBackground(new java.awt.Color(50, 109, 168));
        jButton12.setForeground(new java.awt.Color(255, 255, 255));
        jButton12.setText("Imprimer");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        editFicheBtn.setBackground(new java.awt.Color(50, 109, 168));
        editFicheBtn.setForeground(new java.awt.Color(255, 255, 255));
        editFicheBtn.setText("Modifier");
        editFicheBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editFicheBtnActionPerformed(evt);
            }
        });

        saveFicheBtn.setBackground(new java.awt.Color(50, 109, 168));
        saveFicheBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveFicheBtn.setText("Enregistrer");
        saveFicheBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFicheBtnActionPerformed(evt);
            }
        });

        addActeBtn.setBackground(new java.awt.Color(50, 109, 168));
        addActeBtn.setForeground(new java.awt.Color(255, 255, 255));
        addActeBtn.setText("Ajouter un acte");
        addActeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActeBtnActionPerformed(evt);
            }
        });

        jPanel16.setBackground(new java.awt.Color(255, 255, 255));
        jPanel16.setEnabled(false);

        jLabel14.setForeground(java.awt.Color.darkGray);
        jLabel14.setText("Médecin :");

        jLabel15.setForeground(java.awt.Color.darkGray);
        jLabel15.setText("Patient:");

        jLabel16.setForeground(java.awt.Color.darkGray);
        jLabel16.setText("Date :");

        jLabel17.setForeground(java.awt.Color.darkGray);
        jLabel17.setText("Type :");

        jLabel18.setForeground(java.awt.Color.darkGray);
        jLabel18.setText("Coût :");

        jLabel19.setForeground(java.awt.Color.darkGray);
        jLabel19.setText("Observations :");

        ficheObservationsTxtf.setEditable(false);
        ficheObservationsTxtf.setColumns(20);
        ficheObservationsTxtf.setRows(5);
        jScrollPane5.setViewportView(ficheObservationsTxtf);

        jLabel1.setForeground(java.awt.Color.darkGray);
        jLabel1.setText("Acte :");

        fichesActesCBox.setBackground(new java.awt.Color(255, 255, 255));
        fichesActesCBox.setForeground(java.awt.Color.darkGray);
        fichesActesCBox.setModel(new javax.swing.DefaultComboBoxModel<>(new Acte[] {  }));
        fichesActesCBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fichesActesCBoxActionPerformed(evt);
            }
        });
        fichesActesCBox.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                fichesActesCBoxPropertyChange(evt);
            }
        });

        typeDiagnostiqueBtn.setBackground(new java.awt.Color(255, 255, 255));
        typeBtnGrp.add(typeDiagnostiqueBtn);
        typeDiagnostiqueBtn.setForeground(java.awt.Color.darkGray);
        typeDiagnostiqueBtn.setText("Diagnostique");

        typeTherapeutique.setBackground(new java.awt.Color(255, 255, 255));
        typeBtnGrp.add(typeTherapeutique);
        typeTherapeutique.setForeground(java.awt.Color.darkGray);
        typeTherapeutique.setText("Thérapeutique");

        ficheDayBox.setBackground(new java.awt.Color(255, 255, 255));
        ficheDayBox.setEditable(true);
        ficheDayBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        ficheDayBox.setEnabled(false);
        ficheDayBox.setFocusable(false);

        ficheMonthBox.setBackground(new java.awt.Color(255, 255, 255));
        ficheMonthBox.setEditable(true);
        ficheMonthBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));
        ficheMonthBox.setEnabled(false);

        ficheYearBox.setBackground(new java.awt.Color(255, 255, 255));
        ficheYearBox.setEditable(true);
        ficheYearBox.setEnabled(false);

        jLabel23.setForeground(java.awt.Color.darkGray);
        jLabel23.setText("Coût total:");

        fichePatientsBox.setBackground(new java.awt.Color(255, 255, 255));
        fichePatientsBox.setEditable(true);
        fichePatientsBox.setEnabled(false);

        ficheMedecinsBox.setBackground(new java.awt.Color(255, 255, 255));
        ficheMedecinsBox.setEditable(true);
        ficheMedecinsBox.setEnabled(false);

        jLabel4.setText("Heure:");

        ficheMinuteBox.setBackground(new java.awt.Color(255, 255, 255));
        ficheMinuteBox.setEditable(true);
        ficheMinuteBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        ficheMinuteBox.setEnabled(false);
        ficheMinuteBox.setFocusable(false);
        ficheMinuteBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ficheMinuteBoxActionPerformed(evt);
            }
        });

        ficheHourBox.setBackground(new java.awt.Color(255, 255, 255));
        ficheHourBox.setEditable(true);
        ficheHourBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" }));
        ficheHourBox.setEnabled(false);
        ficheHourBox.setFocusable(false);

        jLabel5.setText(":");

        org.jdesktop.layout.GroupLayout jPanel16Layout = new org.jdesktop.layout.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel16Layout.createSequentialGroup()
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jPanel16Layout.createSequentialGroup()
                        .add(23, 23, 23)
                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel16Layout.createSequentialGroup()
                                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel17)
                                    .add(jPanel16Layout.createSequentialGroup()
                                        .add(1, 1, 1)
                                        .add(jLabel18)))
                                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel16Layout.createSequentialGroup()
                                        .add(54, 54, 54)
                                        .add(typeDiagnostiqueBtn)
                                        .add(46, 46, 46)
                                        .add(typeTherapeutique))
                                    .add(jPanel16Layout.createSequentialGroup()
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(ficheCoutActeLbl))))
                            .add(jPanel16Layout.createSequentialGroup()
                                .add(1, 1, 1)
                                .add(jLabel19)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 460, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jPanel16Layout.createSequentialGroup()
                        .add(24, 24, 24)
                        .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel16Layout.createSequentialGroup()
                                .add(jLabel1)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(fichesActesCBox, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(jPanel16Layout.createSequentialGroup()
                                .add(jLabel15)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(fichePatientsBox, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(jPanel16Layout.createSequentialGroup()
                                .add(jLabel14)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(ficheMedecinsBox, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(jPanel16Layout.createSequentialGroup()
                                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel16Layout.createSequentialGroup()
                                        .add(jLabel23)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(ficheCoutTotalLbl))
                                    .add(jPanel16Layout.createSequentialGroup()
                                        .add(jLabel16)
                                        .add(18, 18, 18)
                                        .add(ficheDayBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(ficheMonthBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 49, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(ficheYearBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 94, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(57, 57, 57)
                                        .add(jLabel4)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(ficheHourBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jLabel5)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(ficheMinuteBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                .add(0, 0, Short.MAX_VALUE)))))
                .add(171, 171, 171))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel16Layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel16)
                    .add(ficheDayBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(ficheMonthBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(ficheYearBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4)
                    .add(ficheHourBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(ficheMinuteBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel5))
                .add(18, 18, 18)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel14)
                    .add(ficheMedecinsBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(17, 17, 17)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel15)
                    .add(fichePatientsBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 15, Short.MAX_VALUE)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel23, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(ficheCoutTotalLbl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(fichesActesCBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel17)
                    .add(typeDiagnostiqueBtn)
                    .add(typeTherapeutique))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel18)
                    .add(ficheCoutActeLbl))
                .add(18, 18, 18)
                .add(jPanel16Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel19)
                    .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 182, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
        );

        org.jdesktop.layout.GroupLayout jPanel15Layout = new org.jdesktop.layout.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel15Layout.createSequentialGroup()
                .add(50, 50, 50)
                .add(editFicheBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(33, 33, 33)
                .add(saveFicheBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(27, 27, 27)
                .add(jButton12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(addActeBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 132, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(36, 36, 36))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel16, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel15Layout.createSequentialGroup()
                .add(16, 16, 16)
                .add(jPanel15Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(editFicheBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(saveFicheBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButton12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(addActeBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jSplitPane3.setRightComponent(jPanel15);

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jSplitPane3)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jSplitPane3)
                .addContainerGap())
        );

        mainTabbedPanel.addTab("Fiches de soins", jPanel3);

        medecinPnl.setBackground(new java.awt.Color(255, 255, 255));

        jSplitPane2.setDividerLocation(300);
        jSplitPane2.setDividerSize(8);

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));

        medecinLst.setBackground(new java.awt.Color(255, 255, 255));
        medecinLst.setModel(new javax.swing.AbstractListModel<Medecin>() {
            Medecin[] strings = {  };
            public int getSize() { return strings.length; }
            public Medecin getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(medecinLst);

        addMedecinBtn.setBackground(new java.awt.Color(50, 109, 168));
        addMedecinBtn.setForeground(new java.awt.Color(255, 255, 255));
        addMedecinBtn.setText("Ajouter");
        addMedecinBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMedecinBtnActionPerformed(evt);
            }
        });

        jLabel21.setForeground(java.awt.Color.darkGray);
        jLabel21.setText("Filtrer par :");

        jComboBox5.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox5.setForeground(java.awt.Color.darkGray);
        jComboBox5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aucun", "Patient" }));
        jComboBox5.setSelectedItem(null);
        jComboBox5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox5ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel10Layout = new org.jdesktop.layout.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel10Layout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE))
                    .add(jPanel10Layout.createSequentialGroup()
                        .add(38, 38, 38)
                        .add(addMedecinBtn)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel21)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jComboBox5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel10Layout.createSequentialGroup()
                .add(14, 14, 14)
                .add(jPanel10Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboBox5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel21)
                    .add(addMedecinBtn))
                .add(18, 18, 18)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE)
                .addContainerGap())
        );

        jSplitPane2.setLeftComponent(jPanel10);

        jPanel11.setBackground(new java.awt.Color(255, 255, 255));

        saveMedecinBtn.setBackground(new java.awt.Color(50, 109, 168));
        saveMedecinBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveMedecinBtn.setText("Enregistrer");
        saveMedecinBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMedecinBtnActionPerformed(evt);
            }
        });

        jPanel12.setBackground(new java.awt.Color(255, 255, 255));

        jLabel9.setText("Nom :");

        jLabel10.setText("Spécialité :");

        jLabel11.setText("Numéro de téléphone :");

        medecinNameTxtF.setEditable(false);

        medecinSpecialiteTxtF.setEditable(false);

        medecinTelephoneTxtF.setEditable(false);

        jLabel20.setText("Prénom :");

        medecinSurnameTxtF.setEditable(false);

        org.jdesktop.layout.GroupLayout jPanel12Layout = new org.jdesktop.layout.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel12Layout.createSequentialGroup()
                .add(17, 17, 17)
                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                        .add(jPanel12Layout.createSequentialGroup()
                            .add(jLabel10)
                            .add(14, 14, 14)
                            .add(medecinSpecialiteTxtF))
                        .add(jPanel12Layout.createSequentialGroup()
                            .add(jLabel11)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(medecinTelephoneTxtF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 163, Short.MAX_VALUE)))
                    .add(jPanel12Layout.createSequentialGroup()
                        .add(jLabel9)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(medecinNameTxtF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 233, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jLabel20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(medecinSurnameTxtF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 230, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel12Layout.createSequentialGroup()
                .add(31, 31, 31)
                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel9)
                    .add(medecinNameTxtF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel20)
                    .add(medecinSurnameTxtF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel10)
                    .add(medecinSpecialiteTxtF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel12Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel11)
                    .add(medecinTelephoneTxtF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(558, Short.MAX_VALUE))
        );

        editMedecinBtn.setBackground(new java.awt.Color(50, 109, 168));
        editMedecinBtn.setForeground(new java.awt.Color(255, 255, 255));
        editMedecinBtn.setText("Modifier");
        editMedecinBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editMedecinBtnActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel11Layout = new org.jdesktop.layout.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel11Layout.createSequentialGroup()
                .add(42, 42, 42)
                .add(editMedecinBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 89, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(52, 52, 52)
                .add(saveMedecinBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel12, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel11Layout.createSequentialGroup()
                .add(16, 16, 16)
                .add(jPanel11Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(saveMedecinBtn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .add(editMedecinBtn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(jPanel12, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jSplitPane2.setRightComponent(jPanel11);

        org.jdesktop.layout.GroupLayout medecinPnlLayout = new org.jdesktop.layout.GroupLayout(medecinPnl);
        medecinPnl.setLayout(medecinPnlLayout);
        medecinPnlLayout.setHorizontalGroup(
            medecinPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(medecinPnlLayout.createSequentialGroup()
                .addContainerGap()
                .add(jSplitPane2)
                .addContainerGap())
        );
        medecinPnlLayout.setVerticalGroup(
            medecinPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(medecinPnlLayout.createSequentialGroup()
                .addContainerGap()
                .add(jSplitPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 594, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainTabbedPanel.addTab("Médecins", medecinPnl);

        patientPnl.setBackground(new java.awt.Color(255, 255, 255));

        patientSPnl.setDividerLocation(300);
        patientSPnl.setDividerSize(8);

        patientListPnl.setBackground(new java.awt.Color(255, 255, 255));

        patientLst.setBackground(new java.awt.Color(255, 255, 255));
        patientLst.setModel(new javax.swing.AbstractListModel<Patient>() {
            Patient[] strings = { };
            public int getSize() { return strings.length; }
            public Patient getElementAt(int i) { return strings[i]; }
        });
        patientListScroll.setViewportView(patientLst);

        addPatientBtn.setBackground(new java.awt.Color(50, 109, 168));
        addPatientBtn.setForeground(new java.awt.Color(255, 255, 255));
        addPatientBtn.setText("Ajouter");
        addPatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPatientBtnActionPerformed(evt);
            }
        });

        jLabel22.setText("Filtrer par :");

        jComboBox6.setBackground(new java.awt.Color(255, 255, 255));
        jComboBox6.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Aucun", "Medecin" }));
        jComboBox6.setSelectedItem(null);
        jComboBox6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox6ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout patientListPnlLayout = new org.jdesktop.layout.GroupLayout(patientListPnl);
        patientListPnl.setLayout(patientListPnlLayout);
        patientListPnlLayout.setHorizontalGroup(
            patientListPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(patientListPnlLayout.createSequentialGroup()
                .addContainerGap()
                .add(patientListPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(patientListScroll, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 287, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, patientListPnlLayout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(addPatientBtn)
                        .add(37, 37, 37)
                        .add(jLabel22)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jComboBox6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        patientListPnlLayout.setVerticalGroup(
            patientListPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(patientListPnlLayout.createSequentialGroup()
                .add(18, 18, 18)
                .add(patientListPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboBox6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel22)
                    .add(addPatientBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(patientListScroll, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
                .addContainerGap())
        );

        patientSPnl.setLeftComponent(patientListPnl);

        viewPatientPnl.setBackground(new java.awt.Color(255, 255, 255));

        printPatientBtn.setBackground(new java.awt.Color(50, 109, 168));
        printPatientBtn.setForeground(new java.awt.Color(255, 255, 255));
        printPatientBtn.setText("Imprimer");
        printPatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printPatientBtnActionPerformed(evt);
            }
        });

        savePatientBtn.setBackground(new java.awt.Color(50, 109, 168));
        savePatientBtn.setForeground(new java.awt.Color(255, 255, 255));
        savePatientBtn.setText("Enregistrer");
        savePatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savePatientBtnActionPerformed(evt);
            }
        });

        accessFichesPatientBtn.setBackground(new java.awt.Color(50, 109, 168));
        accessFichesPatientBtn.setForeground(new java.awt.Color(255, 255, 255));
        accessFichesPatientBtn.setText("Fiches de soins du patient ");
        accessFichesPatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                accessFichesPatientBtnActionPerformed(evt);
            }
        });

        infoPatientPnl.setBackground(new java.awt.Color(255, 255, 255));

        nameLbl.setText("Nom :");

        surnameLbl.setText("Prénom :");

        adressLbl.setText("Adresse :");

        patientNameTxtF.setEditable(false);

        patientSurnameTxtF.setEditable(false);

        patientAdressTxtF.setEditable(false);

        patientInseeLbl.setText("INSEE :");

        patientInseeTxtF.setEditable(false);

        listeActePatientLbl.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        listeActePatientLbl.setText("Liste des actes médicaux du patient : ");

        listeActepatientTbl.setBackground(new java.awt.Color(255, 255, 255));
        listeActepatientTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom de l'acte", "Nom du médecin", "Date de réalisation", "Code des coûts", "Coût ()"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        listeActepatientTbl.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_LAST_COLUMN);
        listeActepatientTbl.setFocusable(false);
        listeActePatientSPnl.setViewportView(listeActepatientTbl);
        if (listeActepatientTbl.getColumnModel().getColumnCount() > 0) {
            listeActepatientTbl.getColumnModel().getColumn(0).setResizable(false);
            listeActepatientTbl.getColumnModel().getColumn(1).setResizable(false);
            listeActepatientTbl.getColumnModel().getColumn(2).setResizable(false);
            listeActepatientTbl.getColumnModel().getColumn(3).setResizable(false);
            listeActepatientTbl.getColumnModel().getColumn(4).setResizable(false);
        }

        jLabel3.setText("Coût total:");

        org.jdesktop.layout.GroupLayout infoPatientPnlLayout = new org.jdesktop.layout.GroupLayout(infoPatientPnl);
        infoPatientPnl.setLayout(infoPatientPnlLayout);
        infoPatientPnlLayout.setHorizontalGroup(
            infoPatientPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(infoPatientPnlLayout.createSequentialGroup()
                .add(17, 17, 17)
                .add(infoPatientPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(listeActePatientLbl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 339, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(listeActePatientSPnl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 679, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(infoPatientPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                        .add(org.jdesktop.layout.GroupLayout.LEADING, infoPatientPnlLayout.createSequentialGroup()
                            .add(nameLbl)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(patientNameTxtF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 233, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(18, 18, 18)
                            .add(surnameLbl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(patientSurnameTxtF, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, infoPatientPnlLayout.createSequentialGroup()
                            .add(adressLbl)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(patientAdressTxtF))
                        .add(org.jdesktop.layout.GroupLayout.LEADING, infoPatientPnlLayout.createSequentialGroup()
                            .add(patientInseeLbl)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(patientInseeTxtF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 181, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(80, 80, 80)
                            .add(jLabel3)
                            .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                            .add(patientCoutTotalLbl))))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        infoPatientPnlLayout.setVerticalGroup(
            infoPatientPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(infoPatientPnlLayout.createSequentialGroup()
                .add(31, 31, 31)
                .add(infoPatientPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(nameLbl)
                    .add(patientNameTxtF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(surnameLbl)
                    .add(patientSurnameTxtF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(infoPatientPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(adressLbl)
                    .add(patientAdressTxtF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(infoPatientPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(patientInseeLbl)
                    .add(patientInseeTxtF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(patientCoutTotalLbl))
                .add(18, 18, 18)
                .add(listeActePatientLbl)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(listeActePatientSPnl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 338, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(170, Short.MAX_VALUE))
        );

        editPatientBtn.setBackground(new java.awt.Color(50, 109, 168));
        editPatientBtn.setForeground(new java.awt.Color(255, 255, 255));
        editPatientBtn.setText("Modifier");
        editPatientBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPatientBtnActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout viewPatientPnlLayout = new org.jdesktop.layout.GroupLayout(viewPatientPnl);
        viewPatientPnl.setLayout(viewPatientPnlLayout);
        viewPatientPnlLayout.setHorizontalGroup(
            viewPatientPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, viewPatientPnlLayout.createSequentialGroup()
                .add(24, 24, 24)
                .add(editPatientBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 90, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(30, 30, 30)
                .add(savePatientBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(27, 27, 27)
                .add(printPatientBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(accessFichesPatientBtn)
                .add(36, 36, 36))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, viewPatientPnlLayout.createSequentialGroup()
                .addContainerGap()
                .add(infoPatientPnl, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        viewPatientPnlLayout.setVerticalGroup(
            viewPatientPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(viewPatientPnlLayout.createSequentialGroup()
                .add(16, 16, 16)
                .add(viewPatientPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(viewPatientPnlLayout.createSequentialGroup()
                        .add(viewPatientPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(savePatientBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(printPatientBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(accessFichesPatientBtn, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(0, 0, Short.MAX_VALUE))
                    .add(editPatientBtn, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(infoPatientPnl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        patientSPnl.setRightComponent(viewPatientPnl);

        org.jdesktop.layout.GroupLayout patientPnlLayout = new org.jdesktop.layout.GroupLayout(patientPnl);
        patientPnl.setLayout(patientPnlLayout);
        patientPnlLayout.setHorizontalGroup(
            patientPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(patientPnlLayout.createSequentialGroup()
                .addContainerGap()
                .add(patientSPnl)
                .addContainerGap())
        );
        patientPnlLayout.setVerticalGroup(
            patientPnlLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(patientPnlLayout.createSequentialGroup()
                .addContainerGap()
                .add(patientSPnl, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 594, Short.MAX_VALUE)
                .addContainerGap())
        );

        mainTabbedPanel.addTab("Patients", patientPnl);

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel6.setText("Calcul du prix d'un acte :");

        jLabel7.setText("Code :");

        prixActeBox.setBackground(new java.awt.Color(255, 255, 255));

        jLabel8.setText("Coefficient :");

        prixCoefTxtF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                prixCoefTxtFKeyReleased(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel24.setText("Prix:");

        prixActeLbl.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        prixActeLbl.setForeground(new java.awt.Color(255, 0, 0));
        prixActeLbl.setText("Veuillez entrer un coefficient");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(15, 15, 15)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel7)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(prixActeBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 251, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jLabel6)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel24)
                            .add(jLabel8))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(prixCoefTxtF)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(prixActeLbl)
                                .add(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel6)
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel7)
                    .add(prixActeBox, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(prixCoefTxtF, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(31, 31, 31)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel24)
                    .add(prixActeLbl))
                .addContainerGap(140, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .add(23, 23, 23)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(707, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .add(18, 18, 18)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(282, Short.MAX_VALUE))
        );

        mainTabbedPanel.addTab("Prix", jPanel8);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainTabbedPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(mainTabbedPanel)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initPatientTab() {
        JList patientJList = new JList(dm.getPatients().toArray());
        this.patientLst.setFixedCellHeight(30);
        this.patientLst.setModel(patientJList.getModel());
        this.patientLst.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        initializeYearBox();
        this.patientLst.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                if(!lse.getValueIsAdjusting()) return;
                Patient selectedPatient = ((JList<Patient>) lse.getSource()).getSelectedValue();
                if(selectedPatient != null){
                    updatePatientTextFields(selectedPatient);

                    DefaultTableModel model = (DefaultTableModel) MainWindow.this.listeActepatientTbl.getModel();
                    model.getDataVector().removeAllElements();
                    model.fireTableDataChanged();
                    for(FicheDeSoins f : selectedPatient.getListeFiches() ){
                        Date date = f.getDate();
                        Medecin medecin = f.getMedecin();
                        for(Acte a: f.getActes()){
                            model.addRow( new String[] {
                                a.getNomActe(), 
                                medecin.getNom()+ " " + medecin.getPrenom(),
                                date.toString(),  
                                a.getCode().name(),
                                new DecimalFormat("##.##").format( a.cout() )
                            });
                        }
                    }
                }
            }
        });
        togglePatientTxtF(false);
    }
    
    private void initMedecinTab() {
        JList medecinJList = new JList(dm.getMedecins().toArray());
        this.medecinLst.setFixedCellHeight(30);
        this.medecinLst.setModel(medecinJList.getModel());
        this.medecinLst.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        this.medecinLst.addListSelectionListener( new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                Medecin selectedMedecin = ((JList<Medecin>) lse.getSource()).getSelectedValue();
                updateMedecinTextFields(selectedMedecin);
            }
        });
        
    }
    
    private void initFichesTab(){
        JList fichesJList = new JList(dm.getFiches().toArray());
        this.fichesLst.setFixedCellHeight(30);
        this.fichesLst.setModel(fichesJList.getModel());
        this.fichesLst.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        this.fichesLst.addListSelectionListener( new ListSelectionListener(){
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                FicheDeSoins selected = ((JList<FicheDeSoins>) lse.getSource()).getSelectedValue();
                updateFicheTextFields(selected);
            }
            
        });

    }
    
    private void initPrixTab(){
        DefaultComboBoxModel<Code> modelActe = new DefaultComboBoxModel<>( Code.getValuesVector() );
        this.prixActeBox.setModel(modelActe);
    }
    private void addMedecinBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMedecinBtnActionPerformed
        int medecinIndex = this.medecinLst.getSelectedIndex();
        AddMedecin ap = new AddMedecin(this);
        ap.setVisible(true);
        ap.setLocationRelativeTo(null);
        ap.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        JList patientJList = new JList(dm.getPatients().toArray());
        this.patientLst.setModel(patientJList.getModel());
        this.patientLst.setSelectedIndex( medecinIndex );
    }//GEN-LAST:event_addMedecinBtnActionPerformed

    private void printPatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printPatientBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_printPatientBtnActionPerformed

    private void editPatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPatientBtnActionPerformed
        Patient selectedPatient = patientLst.getSelectedValue();
        if( selectedPatient == null) return;
        if(this.editPatientBtn.getText().equals("Modifier")) {
            this.editPatientBtn.setText("Annuler");
            togglePatientTxtF(true);
        } else {
            togglePatientTxtF(false);
            this.editPatientBtn.setText("Modifier");
            updatePatientTextFields(selectedPatient);
        }
    }//GEN-LAST:event_editPatientBtnActionPerformed
    
    public void togglePatientTxtF(Boolean bool){
            this.patientAdressTxtF.setEditable(bool);
            this.patientNameTxtF.setEditable(bool);
            this.patientSurnameTxtF.setEditable(bool);
    }
    
    private void savePatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savePatientBtnActionPerformed
        Patient selectedPatient = this.patientLst.getSelectedValue();
        if( selectedPatient == null ) return;
        
        selectedPatient.setNom( this.patientNameTxtF.getText() );
        selectedPatient.setPrenom( this.patientSurnameTxtF.getText() );
        selectedPatient.setAdresse( this.patientAdressTxtF.getText() );
        selectedPatient.setNumINSEE( this.patientInseeTxtF.getText() );
        
        
//        ModifyXMLFile.modifyPatient(selectedPatient.getNumINSEE(), selectedPatient);
        this.patientLst.updateUI();
        togglePatientTxtF(false);
        this.editPatientBtn.setSelected(false);
        this.editPatientBtn.setText("Modifier");
        
        
    }//GEN-LAST:event_savePatientBtnActionPerformed

    private void addPatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPatientBtnActionPerformed
        int patientIndex = this.patientLst.getSelectedIndex();
        addPatientWindow = new AddPatient(this);
        addPatientWindow.setVisible(true);
        addPatientWindow.setLocationRelativeTo(null);
        addPatientWindow.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        JList patientJList = new JList(dm.getPatients().toArray());
        this.patientLst.setModel(patientJList.getModel());
        this.patientLst.setSelectedIndex( patientIndex );
        
    }//GEN-LAST:event_addPatientBtnActionPerformed

    private void mainTabbedPanelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mainTabbedPanelStateChanged

    }//GEN-LAST:event_mainTabbedPanelStateChanged

    private void editMedecinBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editMedecinBtnActionPerformed
        Medecin selectedMedecin = medecinLst.getSelectedValue();
        if(selectedMedecin == null ) return;
        
        if(this.editMedecinBtn.getText().equals("Modifier")) {
            this.editMedecinBtn.setText("Annuler");
            toggleMedecinTxtF(true);
        } else {
            this.editMedecinBtn.setText("Modifier");
            updateMedecinTextFields(selectedMedecin);
            toggleMedecinTxtF(false);
        }
    }//GEN-LAST:event_editMedecinBtnActionPerformed
    
    private void toggleMedecinTxtF(Boolean bool){
            this.medecinNameTxtF.setEditable(bool);
            this.medecinSurnameTxtF.setEditable(bool);
            this.medecinSpecialiteTxtF.setEditable(bool);
            this.medecinTelephoneTxtF.setEditable(bool);
    }
    
    private void saveMedecinBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMedecinBtnActionPerformed
        Medecin selectedMedecin = medecinLst.getSelectedValue();
        if( selectedMedecin == null ) return;
        
        Medecin tmp = new Medecin( 
                this.medecinNameTxtF.getText(),
                this.medecinSurnameTxtF.getText(),
                this.medecinSpecialiteTxtF.getText(),
                this.medecinTelephoneTxtF.getText()
        );
        selectedMedecin.setNom( tmp.getNom() );
        selectedMedecin.setPrenom( tmp.getPrenom() );
        selectedMedecin.setSpecialite( tmp.getSpecialite() );
        selectedMedecin.setTelephone( tmp.getTelephone() );
        
        ModifyXMLFile.modifyMedecin(selectedMedecin.getId(), tmp);
        this.medecinLst.updateUI();
        this.editMedecinBtn.setSelected(false);
        this.editMedecinBtn.setText("Modifier");
        
    }//GEN-LAST:event_saveMedecinBtnActionPerformed

    private void fichesActesCBoxPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_fichesActesCBoxPropertyChange

        try{
            JComboBox c = (JComboBox) evt.getSource();
            updateActeTextFields( (Acte)c.getSelectedItem() );
        } catch (Exception e) {
        }

    }//GEN-LAST:event_fichesActesCBoxPropertyChange

    private void fichesActesCBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fichesActesCBoxActionPerformed
        try{
            JComboBox c = (JComboBox) evt.getSource();
            updateActeTextFields( (Acte)c.getSelectedItem() );

        } catch (Exception e) {

        }
    }//GEN-LAST:event_fichesActesCBoxActionPerformed

    private void addActeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActeBtnActionPerformed
        AddActe ap = new AddActe(this, this.fichesLst.getSelectedValue());
        ap.setVisible(true);
        ap.setLocationRelativeTo(null);
        ap.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        JList patientJList = new JList(dm.getPatients().toArray());
        this.patientLst.setModel(patientJList.getModel());
    }//GEN-LAST:event_addActeBtnActionPerformed

    private void addFicheBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFicheBtnActionPerformed
        int ficheIndex = this.fichesLst.getSelectedIndex();
        AddFiche ap = new AddFiche(this, dm);
        ap.setVisible(true);
        ap.setLocationRelativeTo(null);
        ap.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        JList patientJList = new JList(dm.getPatients().toArray());
        this.patientLst.setModel(patientJList.getModel());
        this.patientLst.setSelectedIndex( ficheIndex );
    }//GEN-LAST:event_addFicheBtnActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        JComboBox c = (JComboBox) evt.getSource();
        JList list;
        switch(c.getSelectedIndex()){
            case 0:
                list = new JList(this.sortFichesByDateCroissante().toArray());
                this.fichesLst.setModel(list.getModel());
                break;
            case 1:
                list = new JList(this.sortFichesByDateDecroissante().toArray());
                this.fichesLst.setModel(list.getModel());
                break;
            case 2:
                list = new JList(this.sortFichesByCoutCroissant().toArray());
                this.fichesLst.setModel(list.getModel());
                break;
            case 3:
                list = new JList(this.sortFichesByCoutDecroissant().toArray());
                this.fichesLst.setModel(list.getModel());
            default:
                break;
        }
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        JComboBox c = (JComboBox) evt.getSource();
        JList list;
        switch(c.getSelectedIndex()){
            case 0:
                list = new JList(dm.getFiches().toArray());
                this.fichesLst.setModel(list.getModel());
                break;
            case 1:
                DefaultComboBoxModel<Patient> modelPatient = new DefaultComboBoxModel<>( new Vector<Patient>(dm.getPatients()));
                JComboBox<Patient> listPatientsCBox = new JComboBox<>(modelPatient);

                JOptionPane.showMessageDialog(null, listPatientsCBox, "Selectionner le patient", JOptionPane.PLAIN_MESSAGE);
                list = new JList( this.filterFichesByPatient( (Patient) listPatientsCBox.getSelectedItem() ).toArray());
                this.fichesLst.setModel(list.getModel());
                break;
            case 2:
                DefaultComboBoxModel<Medecin> modelMedecin = new DefaultComboBoxModel<>( new Vector<Medecin>(dm.getMedecins()));
                JComboBox<Medecin> listMedecinsCBox = new JComboBox<>(modelMedecin);

                JOptionPane.showMessageDialog(null, listMedecinsCBox, "Selectionner le médecin", JOptionPane.PLAIN_MESSAGE);
                list = new JList( this.filterFichesByMedecin( (Medecin) listMedecinsCBox.getSelectedItem() ).toArray());
                this.fichesLst.setModel(list.getModel());
                break;
            case 3:
                List<Date> dates = askDateFilter();
                
                list = new JList(  dm.getFichesBetweenDates(dates.get(0), dates.get(1)).toArray());
                this.fichesLst.setModel(list.getModel());
            default:
                break;
        }
    }//GEN-LAST:event_jComboBox4ActionPerformed
    private String[] copyListModel(ListModel lm){
        String[] copy = new String[lm.getSize()];
        for (int i=0; i<lm.getSize(); i++) {
          copy[i] = (String) lm.getElementAt(i);
        }
        return copy;
    }
    
    private List<Date> askDateFilter(){
        
        JComboBox<String> jourInfBox = new JComboBox( copyListModel(this.ficheDayBox.getModel()) );
        JComboBox<String> jourSupBox = new JComboBox<>( copyListModel(this.ficheDayBox.getModel()) );
        JComboBox<String> moisInfBox = new JComboBox<>( copyListModel(this.ficheMonthBox.getModel()) );
        JComboBox<String> moisSupBox = new JComboBox<>( copyListModel(this.ficheMonthBox.getModel()) );
        JComboBox<String> yearInfBox = new JComboBox<>( copyListModel(this.ficheYearBox.getModel()) );
        JComboBox<String> yearSupBox = new JComboBox<>( copyListModel(this.ficheYearBox.getModel()) );
        JLabel dateInfLbl = new JLabel("Du :");
        JLabel dateSupLbl = new JLabel("  au: ");
        JPanel panel = new JPanel( );
        panel.add(dateInfLbl);
        panel.add(jourInfBox); panel.add(moisInfBox); panel.add(yearInfBox);
        panel.add(dateSupLbl);
        panel.add(jourSupBox); panel.add(moisSupBox); panel.add(yearSupBox);
        JOptionPane.showMessageDialog(null, panel, "Filtrer par date", JOptionPane.PLAIN_MESSAGE);
        
        Date date1 = new Date( 
                Integer.parseInt( (String) jourInfBox.getSelectedItem() ),
                Integer.parseInt( (String) moisInfBox.getSelectedItem() ),
                Integer.parseInt( (String) yearInfBox.getSelectedItem() )
        );
        
        Date date2 = new Date( 
                Integer.parseInt( (String) jourSupBox.getSelectedItem() ),
                Integer.parseInt( (String) moisSupBox.getSelectedItem() ),
                Integer.parseInt( (String) yearSupBox.getSelectedItem() )
        );
        List<Date> l = new ArrayList<>();
        l.add(date1);
        l.add(date2);
        
        return l;
    }
    private void jComboBox5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox5ActionPerformed
        JComboBox c = (JComboBox) evt.getSource();
        JList list;
        switch(c.getSelectedIndex()){
            case 0:
                list = new JList(dm.getMedecins().toArray());
                this.medecinLst.setModel(list.getModel());
                break;
            case 1:
                DefaultComboBoxModel<Patient> modelMedecin = new DefaultComboBoxModel<>( new Vector<Patient>(dm.getPatients()));
                JComboBox<Patient> listPatientsCBox = new JComboBox<>(modelMedecin);

                JOptionPane.showMessageDialog(null, listPatientsCBox, "Selectionner le patient", JOptionPane.PLAIN_MESSAGE);
                list = new JList( this.filterMedecinsByPatient( (Patient) listPatientsCBox.getSelectedItem() ).toArray());
                this.medecinLst.setModel(list.getModel());
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jComboBox5ActionPerformed

    private void jComboBox6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox6ActionPerformed
        JComboBox c = (JComboBox) evt.getSource();
        JList list;
        switch(c.getSelectedIndex()){
            case 0:
                list = new JList(dm.getMedecins().toArray());
                this.medecinLst.setModel(list.getModel());
                break;
            case 1:
                DefaultComboBoxModel<Medecin> modelMedecin = new DefaultComboBoxModel<>( new Vector<Medecin>(dm.getMedecins()));
                JComboBox<Medecin> listMedecinsCBox = new JComboBox<>(modelMedecin);

                JOptionPane.showMessageDialog(null, listMedecinsCBox, "Selectionner le médecin", JOptionPane.PLAIN_MESSAGE);
                list = new JList( this.filterPatientsByMedecin( (Medecin) listMedecinsCBox.getSelectedItem() ).toArray());
                this.patientLst.setModel(list.getModel());
                break;
            default:
                break;
        }
    }//GEN-LAST:event_jComboBox6ActionPerformed

    private void editFicheBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editFicheBtnActionPerformed
        FicheDeSoins selected = fichesLst.getSelectedValue();
        if( selected == null) return;
        if(this.editFicheBtn.getText().equals("Modifier")) {
            this.editFicheBtn.setText("Annuler");
            toggleFicheTxtF(true);
        } else {
            toggleFicheTxtF(false);
            this.editFicheBtn.setText("Modifier");
            updateFicheTextFields(selected);
        }
    }//GEN-LAST:event_editFicheBtnActionPerformed

    private void saveFicheBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFicheBtnActionPerformed
        FicheDeSoins selected = fichesLst.getSelectedValue();
        if( selected == null ) return;
        FicheDeSoins tmp = new FicheDeSoins(
            (Patient) this.fichePatientsBox.getSelectedItem(),
            (Medecin) this.ficheMedecinsBox.getSelectedItem(),
            new Date(
                Integer.parseInt( (String) this.ficheDayBox.getSelectedItem() ),
                Integer.parseInt( (String) this.ficheMonthBox.getSelectedItem() ),
                Integer.parseInt( (String) this.ficheYearBox.getSelectedItem() ),
                Integer.parseInt( (String) this.ficheHourBox.getSelectedItem() ),
                Integer.parseInt( (String) this.ficheMinuteBox.getSelectedItem() )
            ),
            selected.getId(),
            selected.getActes()
        );
        
        selected.setPatient( tmp.getPatient() );
        selected.setMedecin( tmp.getMedecin() );
        selected.setDate( tmp.getDate() );
        
        ModifyXMLFile.modifyFiche(selected.getId(), tmp);
        toggleFicheTxtF(false);
        this.fichesLst.updateUI();
        this.editFicheBtn.setSelected(false);
        this.editFicheBtn.setText("Modifier");
    }//GEN-LAST:event_saveFicheBtnActionPerformed

    private void accessFichesPatientBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_accessFichesPatientBtnActionPerformed
        Patient selectedPatient = this.patientLst.getSelectedValue();
        if(selectedPatient == null) return;
        this.mainTabbedPanel.setSelectedComponent( this.jPanel3 );
        JList list = new JList( this.filterFichesByPatient( selectedPatient ).toArray());
        this.fichesLst.setModel(list.getModel());
        
    }//GEN-LAST:event_accessFichesPatientBtnActionPerformed

    private void ficheMinuteBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ficheMinuteBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ficheMinuteBoxActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        if (this.fichesLst.getSelectedValue() == null) return;
        FichePatientPrinter fp = new FichePatientPrinter(this.fichesLst.getSelectedValue());
        fp.actionPerformed(null);
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        DossierMedicalPrinter fp = new DossierMedicalPrinter(this.dm);
        fp.actionPerformed(null);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void prixCoefTxtFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_prixCoefTxtFKeyReleased
        if(this.prixActeBox.getSelectedItem() == null ) return;
        if( this.prixCoefTxtF.getText().matches("^\\d+$")){
            int coef = Integer.parseInt( this.prixCoefTxtF.getText() );
            double cout = ((Code)this.prixActeBox.getSelectedItem()).calculerCout( coef );
            this.prixActeLbl.setText( new DecimalFormat("##.##").format( cout ) + "" );
        } else if(this.prixCoefTxtF.getText().length() == 0){
            this.prixActeLbl.setText("Veuillez entrer un coefficient");
        } else {
            this.prixActeLbl.setText("Le coefficient doit être un nombre entier");
        }
        
    }//GEN-LAST:event_prixCoefTxtFKeyReleased
    
    private List<FicheDeSoins> sortFichesByDateCroissante(){
        ListModel<FicheDeSoins> currentListModel = this.fichesLst.getModel();
        List<FicheDeSoins> copieFiches = new ArrayList<>(currentListModel.getSize());
        List<FicheDeSoins> sorted = new ArrayList<>(currentListModel.getSize());
        
        for(int i = 0; i < currentListModel.getSize(); i++ ){
            copieFiches.add( currentListModel.getElementAt(i) );
        }
        while (!copieFiches.isEmpty()) {
            // on cherche la fiche de soins de date minimale :
            int imin = 0;
            FicheDeSoins f1 = copieFiches.get(imin);
            for (int i = 1; i < copieFiches.size(); i++) {
                FicheDeSoins f2 = copieFiches.get(i);
                if (f2.getDate().compareTo(f1.getDate()) < 0) {
                    imin = i;
                    f1 = f2;
                }
            }
            // on affiche la fiche de soins trouvee :
            sorted.add(f1);
            //on la supprime de la liste :
            copieFiches.remove(imin);
        }
        return sorted;
    }
    
    private List<FicheDeSoins> sortFichesByDateDecroissante(){
        ListModel<FicheDeSoins> currentListModel = this.fichesLst.getModel();
        List<FicheDeSoins> copieFiches = new ArrayList<>(currentListModel.getSize());
        List<FicheDeSoins> sorted = new ArrayList<>(currentListModel.getSize());
        
        for(int i = 0; i < currentListModel.getSize(); i++ ){
            copieFiches.add( currentListModel.getElementAt(i) );
        }
        while (!copieFiches.isEmpty()) {
            // on cherche la fiche de soins de date minimale :
            int imin = 0;
            FicheDeSoins f1 = copieFiches.get(imin);
            for (int i = 1; i < copieFiches.size(); i++) {
                FicheDeSoins f2 = copieFiches.get(i);
                if (f2.getDate().compareTo(f1.getDate()) > 0) {
                    imin = i;
                    f1 = f2;
                }
            }
            // on affiche la fiche de soins trouvee :
            sorted.add(f1);
            //on la supprime de la liste :
            copieFiches.remove(imin);
        }
        return sorted;
    }
     
    private List<FicheDeSoins> sortFichesByCoutDecroissant(){
        ListModel<FicheDeSoins> currentListModel = this.fichesLst.getModel();
        List<FicheDeSoins> copieFiches = new ArrayList<>(currentListModel.getSize());
        List<FicheDeSoins> sorted = new ArrayList<>(currentListModel.getSize());
        
        for(int i = 0; i < currentListModel.getSize(); i++ ){
            copieFiches.add( currentListModel.getElementAt(i) );
        }
        while (!copieFiches.isEmpty()) {
            // on cherche la fiche de soins de date minimale :
            int imin = 0;
            FicheDeSoins f1 = copieFiches.get(imin);
            for (int i = 1; i < copieFiches.size(); i++) {
                FicheDeSoins f2 = copieFiches.get(i);
                if (f1.coutTotal() < f2.coutTotal()) {
                    imin = i;
                    f1 = f2;
                }
            }
            // on affiche la fiche de soins trouvee :
            sorted.add(f1);
            //on la supprime de la liste :
            copieFiches.remove(imin);
        }
        return sorted;
    }   
    
    private List<FicheDeSoins> sortFichesByCoutCroissant(){
        ListModel<FicheDeSoins> currentListModel = this.fichesLst.getModel();
        List<FicheDeSoins> copieFiches = new ArrayList<>(currentListModel.getSize());
        List<FicheDeSoins> sorted = new ArrayList<>(currentListModel.getSize());
        
        for(int i = 0; i < currentListModel.getSize(); i++ ){
            copieFiches.add( currentListModel.getElementAt(i) );
        }
        while (!copieFiches.isEmpty()) {
            // on cherche la fiche de soins de date minimale :
            int imin = 0;
            FicheDeSoins f1 = copieFiches.get(imin);
            for (int i = 1; i < copieFiches.size(); i++) {
                FicheDeSoins f2 = copieFiches.get(i);
                if (f1.coutTotal() > f2.coutTotal()) {
                    imin = i;
                    f1 = f2;
                }
            }
            // on affiche la fiche de soins trouvee :
            sorted.add(f1);
            //on la supprime de la liste :
            copieFiches.remove(imin);
        }
        return sorted;
    }   
   
    private List<FicheDeSoins> filterFichesByPatient(Patient p){
        JList defaultList = new JList(dm.getFiches().toArray());
        ListModel<FicheDeSoins> currentListModel = defaultList.getModel();
        List<FicheDeSoins> currentList = new ArrayList<>(currentListModel.getSize());
        List<FicheDeSoins> filtered = new ArrayList<>();
        
        for(int i = 0; i < currentListModel.getSize(); i++ ){
            currentList.add( currentListModel.getElementAt(i) );
        }
        
        for(FicheDeSoins s: currentList){
            if(s.getPatient() == p)
                filtered.add(s);
        }
        
        return filtered;
    }
    
    private List<FicheDeSoins> filterFichesByMedecin(Medecin m){
        JList defaultList = new JList(dm.getFiches().toArray());
        ListModel<FicheDeSoins> currentListModel = defaultList.getModel();
        List<FicheDeSoins> currentList = new ArrayList<>(currentListModel.getSize());
        List<FicheDeSoins> filtered = new ArrayList<>();
        
        for(int i = 0; i < currentListModel.getSize(); i++ ){
            currentList.add( currentListModel.getElementAt(i) );
        }
        
        for(FicheDeSoins s: currentList){
            if(s.getMedecin() == m)
                filtered.add(s);
        }
        
        return filtered;
    }
    
    private List<Medecin> filterMedecinsByPatient(Patient p){
        JList defaultList = new JList(dm.getMedecins().toArray());
        ListModel<Medecin> currentListModel = defaultList.getModel();
        List<Medecin> currentList = new ArrayList<>(currentListModel.getSize());
        List<Medecin> filtered = new ArrayList<>();
        
        for(int i = 0; i < currentListModel.getSize(); i++ ){
            currentList.add( currentListModel.getElementAt(i) );
        }
        
        for(FicheDeSoins f: dm.getFiches()){
            if(f.getPatient() == p){
                if(!filtered.contains( f.getMedecin() ))
                    filtered.add(f.getMedecin());
            }     
        }
        
        return filtered; 
    }
    
    private List<Patient> filterPatientsByMedecin(Medecin m){
        JList defaultList = new JList(dm.getPatients().toArray());
        ListModel<Patient> currentListModel = defaultList.getModel();
        List<Patient> currentList = new ArrayList<>(currentListModel.getSize());
        List<Patient> filtered = new ArrayList<>();
        
        for(int i = 0; i < currentListModel.getSize(); i++ ){
            currentList.add( currentListModel.getElementAt(i) );
        }
        
        for(FicheDeSoins f: dm.getFiches()){
            if(f.getMedecin() == m){
                if(!filtered.contains( f.getPatient() ))
                    filtered.add(f.getPatient());
            }     
        }
        
        return filtered; 
    }
    
    public final void initializeYearBox() {
        java.time.LocalDate date = java.time.LocalDate.now();
        int nYears = date.getYear() - AddFiche.STARTING_YEAR + 1;
        for(int i = 0; i < nYears; i++) {
            this.ficheYearBox.addItem(Integer.toString(i + AddFiche.STARTING_YEAR));
        }
        
    }
    
    private void updatePatientTextFields(Patient p){
        if( p != null) {
            this.patientNameTxtF.setText( p.getNom() );
            this.patientSurnameTxtF.setText( p.getPrenom() );
            this.patientAdressTxtF.setText( p.getAdresse() );
            this.patientInseeTxtF.setText( p.getNumINSEE() );
            this.patientCoutTotalLbl.setText( new DecimalFormat("##.##").format( p.getCoutTotal() ) + "");
        }
    }
    
    private void updateMedecinTextFields(Medecin m){
        if ( m != null) {
            this.medecinNameTxtF.setText( m.getNom() );
            this.medecinSurnameTxtF.setText( m.getPrenom() );
            this.medecinSpecialiteTxtF.setText( m.getSpecialite() );
            this.medecinTelephoneTxtF.setText( m.getTelephone() );
        }
        
    }
    
    private void updateFicheTextFields(FicheDeSoins f){
        if( f != null ) {
            this.ficheDayBox.setSelectedIndex( f.getDate().getJour() - 1);
            this.ficheMonthBox.setSelectedIndex( f.getDate().getMois() - 1);
            this.ficheYearBox.setSelectedIndex( f.getDate().getAnnee() - AddFiche.STARTING_YEAR);
            this.ficheHourBox.setSelectedIndex( f.getDate().getHeure() );
            this.ficheMinuteBox.setSelectedIndex( f.getDate().getMinute() );
            this.ficheCoutTotalLbl.setText( new DecimalFormat("##.##").format( f.coutTotal() ) + "");
            DefaultComboBoxModel<Medecin> modelMedecins = new DefaultComboBoxModel<>( new Vector<Medecin>(dm.getMedecins()) );
            this.ficheMedecinsBox.setModel(modelMedecins);
            this.ficheMedecinsBox.setSelectedItem(f.getMedecin());
            this.fichePatientsBox.setSelectedItem(f.getPatient());
            DefaultComboBoxModel<Patient> modelPatients = new DefaultComboBoxModel<>( new Vector<Patient>(dm.getPatients()) );
            this.fichePatientsBox.setModel(modelPatients);
            this.fichePatientsBox.setSelectedItem(f.getPatient());
            
            DefaultComboBoxModel<Acte> model = new DefaultComboBoxModel<>( f.getActes() );
            this.fichesActesCBox.setModel(model);
        }
    }
    
    private void updateActeTextFields(Acte a) {
        if ( a != null ) {
            MainWindow.this.ficheCoutActeLbl.setText( new DecimalFormat("##.##").format( a.cout() ) + "");
            MainWindow.this.ficheObservationsTxtf.setText( a.getObservations() );
            MainWindow.this.typeBtnGrp.clearSelection();
            if(a.getType() == TypeActe.DIAGNOSTIQUE) {
                MainWindow.this.typeDiagnostiqueBtn.setSelected(true);
            } else {
                MainWindow.this.typeTherapeutique.setSelected(true);
            }
        }
    }
    
    public final void ajouterPatient(Patient p){
        int patientIndex = this.patientLst.getSelectedIndex();
        dm.ajouterPatient(p);
        JList patientJList = new JList(dm.getPatients().toArray());
        this.patientLst.setModel(patientJList.getModel());
        this.patientLst.setSelectedIndex( patientIndex );
        
    }
    
    public final void ajouterMedecin(Medecin m){
        int index = this.medecinLst.getSelectedIndex();
        dm.ajouterMedecin(m);
        JList patientJList = new JList(dm.getMedecins().toArray());
        this.medecinLst.setModel(patientJList.getModel());
        this.medecinLst.setSelectedIndex( index );
        
    }
    
    public final void ajouterFiche(FicheDeSoins f) {
        int index = this.fichesLst.getSelectedIndex();
        dm.ajouterFiche(f);
        JList ficheJList = new JList(dm.getFiches().toArray());
        this.fichesLst.setModel(ficheJList.getModel());
        this.fichesLst.setSelectedIndex( index );
    }
    
    public void toggleFicheTxtF(Boolean bool){
        this.ficheDayBox.setEnabled(bool);
        this.ficheMonthBox.setEnabled(bool);
        this.ficheYearBox.setEnabled(bool);
        this.ficheHourBox.setEnabled(bool);
        this.ficheMinuteBox.setEnabled(bool);
        this.fichePatientsBox.setEnabled(bool);
        this.ficheMedecinsBox.setEnabled(bool);
        
        this.ficheDayBox.setEditable(!bool);
        this.ficheMonthBox.setEditable(!bool);
        this.ficheYearBox.setEditable(!bool);
        this.ficheHourBox.setEditable(!bool);
        this.ficheMinuteBox.setEditable(!bool);
        this.fichePatientsBox.setEditable(!bool);
        this.ficheMedecinsBox.setEditable(!bool);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        

        //</editor-fold>
        //</editor-fold>
        

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainWindow mw = new MainWindow();
                
                mw.setVisible(true);
                mw.setLocationRelativeTo(null);
                
                UIManager.put("ComboBox.disabledForeground", java.awt.Color.RED);

                SwingUtilities.updateComponentTreeUI(mw);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton accessFichesPatientBtn;
    private javax.swing.JButton addActeBtn;
    private javax.swing.JButton addFicheBtn;
    private javax.swing.JButton addMedecinBtn;
    private javax.swing.JButton addPatientBtn;
    private javax.swing.JLabel adressLbl;
    private javax.swing.JButton editFicheBtn;
    private javax.swing.JToggleButton editMedecinBtn;
    private javax.swing.JToggleButton editPatientBtn;
    private javax.swing.JLabel ficheCoutActeLbl;
    private javax.swing.JLabel ficheCoutTotalLbl;
    private javax.swing.JComboBox<String> ficheDayBox;
    private javax.swing.JComboBox<String> ficheHourBox;
    private javax.swing.JComboBox<Medecin> ficheMedecinsBox;
    private javax.swing.JComboBox<String> ficheMinuteBox;
    private javax.swing.JComboBox<String> ficheMonthBox;
    private javax.swing.JTextArea ficheObservationsTxtf;
    private javax.swing.JComboBox<Patient> fichePatientsBox;
    private javax.swing.JComboBox<String> ficheYearBox;
    private javax.swing.JComboBox<Acte> fichesActesCBox;
    private javax.swing.JList<FicheDeSoins> fichesLst;
    private javax.swing.JPanel infoPatientPnl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton12;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JComboBox<String> jComboBox5;
    private javax.swing.JComboBox<String> jComboBox6;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JLabel listeActePatientLbl;
    private javax.swing.JScrollPane listeActePatientSPnl;
    private javax.swing.JTable listeActepatientTbl;
    private javax.swing.JTabbedPane mainTabbedPanel;
    private javax.swing.JList<Medecin> medecinLst;
    private javax.swing.JTextField medecinNameTxtF;
    private javax.swing.JPanel medecinPnl;
    private javax.swing.JTextField medecinSpecialiteTxtF;
    private javax.swing.JTextField medecinSurnameTxtF;
    private javax.swing.JTextField medecinTelephoneTxtF;
    private javax.swing.JLabel nameLbl;
    private javax.swing.JTextField patientAdressTxtF;
    private javax.swing.JLabel patientCoutTotalLbl;
    private javax.swing.JLabel patientInseeLbl;
    private javax.swing.JTextField patientInseeTxtF;
    private javax.swing.JPanel patientListPnl;
    private javax.swing.JScrollPane patientListScroll;
    private javax.swing.JList<Patient> patientLst;
    private javax.swing.JTextField patientNameTxtF;
    private javax.swing.JPanel patientPnl;
    private javax.swing.JSplitPane patientSPnl;
    private javax.swing.JTextField patientSurnameTxtF;
    private javax.swing.JButton printPatientBtn;
    private javax.swing.JComboBox<Code> prixActeBox;
    private javax.swing.JLabel prixActeLbl;
    private javax.swing.JTextField prixCoefTxtF;
    private javax.swing.JButton saveFicheBtn;
    private javax.swing.JButton saveMedecinBtn;
    private javax.swing.JButton savePatientBtn;
    private javax.swing.JLabel surnameLbl;
    private javax.swing.ButtonGroup typeBtnGrp;
    private javax.swing.JRadioButton typeDiagnostiqueBtn;
    private javax.swing.JRadioButton typeTherapeutique;
    private javax.swing.JPanel viewPatientPnl;
    // End of variables declaration//GEN-END:variables

}
